NSContainerBase.prototype.changeProperty = function(propertyName,value)
{
	this.attributeChangedCallback(propertyName,null,value);
};

NSNavigation.prototype.__createDynamicItem = function(item)
{
	this.__destroyDynamicItem();
	var self = this;
	var createChild = function(item,parent,level)
	{
		var li = self.util.createElement("li",null,"nsNavDynamicMenuItem");
		if(item["cssClass"])
		{
			self.util.addStyleClass(li,item["cssClass"]);
		}
		var anchor = self.util.createElement("a",null);
		li.appendChild(anchor);
		if(item["iconBeforeHtml"])
		{
			var spanIcon = self.util.createElement("span");
			self.util.addStyleClass(spanIcon);
			spanIcon.innerHTML = item["iconBeforeHtml"];
			var icon = spanIcon.firstChild;
			anchor.appendChild(icon);
			anchor.appendChild(document.createTextNode("\u00A0"));
		}
		var spanText = self.util.createElement("span",null,"nsNavDynamicMenuText");
		spanText.appendChild(document.createTextNode(item[self.__config.titleField]));
		anchor.appendChild(spanText);
		if(item["iconAfterHtml"])
		{
			var spanIcon = self.util.createElement("span");
			spanIcon.innerHTML = item["iconAfterHtml"];
			var icon = spanIcon.firstChild;
			anchor.appendChild(icon);
		}
		var hasChildren = false;
		if(item[self.__config.childField] && item[self.__config.childField].length > 0)
		{
			anchor.setAttribute("href","javascript:void(0)");
			var spanIcon = self.util.createElement("span");
			self.util.addStyleClass(spanIcon,"nsNavNonVisibleIcon");
			spanIcon.innerHTML = self.__config.iconMenuExpanded;
			if(self.__config.iconPosition == "left")
			{
				anchor.insertBefore(spanIcon,anchor.firstChild);
			}
			else
			{
				self.util.addStyleClass(spanIcon,"nsNavContainerPullRight");
				anchor.appendChild(spanIcon);
			}
			createChildren(item[self.__config.childField],li,level + 1);
			hasChildren = true;
		}
		else
		{
			self.__setLink(anchor,item["link"]);
		}
		self.util.addEvent(anchor,"click",self.__menuClickHandler.bind(self,event,item,li,hasChildren));
		if(item["disabled"])
		{
			self.util.addStyleClass(li,"nsNavigationItemDisabled");
		}
		if(parent)
		{
			parent.appendChild(li);
		}
		return {li:li,anchor:anchor,hasChildren:hasChildren};
	};
	var createChildren = function(arrItems,parent,level)
	{
		var ul = self.util.createElement("ul",null,"nsNavDynamicSubMenuCont");
		for(var count = 0;count < arrItems.length;count++)
		{
			var item  = arrItems[count];
			createChild(item,ul,level);
		}
		parent.appendChild(ul);
	};
	
	this.__dynamicContainer = this.util.createDiv(this.getID() + "DynamicContainer","nsNavDynamicContainer");
	var spanText = this.util.createElement("span",null,"nsNavDynamicMenuText");
	this.__dynamicContainer.appendChild(spanText);
	if(item[this.__config.childField] && item[this.__config.childField].length > 0)
	{
		spanText.appendChild(document.createTextNode(item[this.__config.titleField]));
		createChildren(item[this.__config.childField],this.__dynamicContainer,1);
	}
	else
	{
		this.util.addStyleClass(spanText,"nsNavDynamicSubMenuCont");
		createChild(item,spanText,1);
	}
	this.__baseComponent.appendChild(this.__dynamicContainer);
	var topOffset = this.__getTopOffset();
	var rect = item[this.__fieldElement].getBoundingClientRect();
	this.__dynamicContainer.style.top = (rect.top + this.__config.collapseTopOffset - topOffset) + "px"; 
	this.__dynamicContainer.style.left = (rect.left + this.__navigationContainer.offsetWidth + this.__config.collapseLeftOffset) + "px";
};
