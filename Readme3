<!DOCTYPE html>

<html>
<head>
	<link href="css/nmGrid.css" rel="stylesheet" type="text/css" />
    <link href="css/nsMenu.css" rel="stylesheet" type="text/css" />
    <link href="css/component.css" rel="stylesheet" type="text/css" />
    <link href="css/nsPagination.css" rel="stylesheet" type="text/css" />
    <link href="css/nsList.css" rel="stylesheet" type="text/css" />
<style>

.nonFirstGridBodyCell
{
	padding-left:5px !important;
}

/*For Menus */
.compMenu {
    list-style-type: none;
    margin: 0;
    padding: 0;
    overflow: hidden;
    border: 1px solid #e7e7e7;
    background-color: #f3f3f3;
    position: fixed;
    top: 0;
    width: 100%;
}

.compMenu li {
    float: left;
}

.compMenu li a {
    display: block;
    color: #666;
    text-align: center;
    padding: 14px 16px;
    text-decoration: none;
}

.compMenu li a:hover:not(.active) {
    background-color: #ddd;
}

.compMenu li a.active {
    color: white;
    background-color: #4CAF50;
}

/*End of Menus */

</style>
</head>
<body>

<ul id="compMenu" class="compMenu">
  <li><a class="active" href="#hierarchical">Hierarchical</a></li>
  <li><a href="#grouping">Grouping</a></li>
  <li><a href="#multilevelgrouping">Multi Level Grouping</a></li>
  <li><a href="#flat">Flat</a></li>
  <li><a href="#asyncloading">Async Loading</a></li>
  <li><a href="#refreshonscrollend">Refresh On Scroll End</a></li>
  <li><a href="#pagination">Pagination Demo</a></li>
  <li><a href="#mobileview">Mobile View</a></li>
  <li><a href="#multisortcolumn">Multi Column Sort</a></li>
</ul>
<div id="divDetails" style="padding:20px;margin-top:30px;">
	
</div>

<script src="lib/nmUtil.js"></script>
<script src="lib/nsContainerBase.js"></script> 
<script src="lib/nsPagination.js"></script>
<script src="lib/nsSVG.js"></script>
<script src="lib/nsMenu.js"></script>
<script src="lib/nsFlatGrid.js"></script>
<script src="lib/nsGroupingGrid.js"></script>
<script src="lib/nsHierarchicalGrid.js"></script>
<script src="lib/nsFilter.js"></script>
<script src="lib/nsGridPluggins.js"></script>
<script src="lib/nmGrid.js"></script>
<script src="lib/nsList.js"></script>
<script src="lib/nsExport.js"></script>
<script src="lib/extra/nsRouter.js"></script>

<script>
var nsRouter = null;
var callbackInterval = null;
var util = null;
function loadHandler(event) 
{
	var loadTemplateRef = loadTemplate.bind(this);
	var arrRoute = [{route:"/hierarchical",templateUrl:"template/hierarchicalGrid.jsp",callback:"loadHierarchicalHandler",handler:loadTemplateRef},
	                {route:"/grouping",templateUrl:"template/groupingGrid.jsp",callback:"loadGroupHandler",handler:loadTemplateRef},
	                {route:"/multilevelgrouping",templateUrl:"template/multiLeveGroupingGrid.jsp",callback:"loadMultiLevelGroupHandler",handler:loadTemplateRef},
					{route:"/flat",templateUrl:"template/flatGrid.jsp",callback:"loadFlatHandler",handler:loadTemplateRef},
	                {route:"/asyncloading",templateUrl:"template/asyncLoading.jsp",callback:"loadAysncHandler",handler:loadTemplateRef},
	                {route:"/refreshonscrollend",templateUrl:"template/refreshOnScrollEnd.jsp",callback:"loadRefreshOnScrollEnd",handler:loadTemplateRef},
	                {route:"/pagination",templateUrl:"template/paginationDemo.jsp",callback:"loadPagination",handler:loadTemplateRef},
	                {route:"/multisortcolumn",templateUrl:"template/multiSortColumn.jsp",callback:"loadMultiSortColumnView",handler:loadTemplateRef},
	                {route:"/mobileview",templateUrl:"template/mobileView.jsp",callback:"loadMobileView",handler:loadTemplateRef}
	                ];
	var setting = {mode:"hash",defaultRoute:"/hierarchical"};//,templateTarget:"myDiv"
	util = new NSUtil();
	nsRouter = new NSRouter(arrRoute,setting);
	//console.log(document.querySelector('[data-ns-container]') || document.querySelector('[ns-container]'));
}

function loadTemplate(item)
{
	var self = this;
	var divDetails = document.querySelector("#divDetails");
	if(item["templateUrl"])
	{
		selectMenu(null,item["route"]);
		var templateLoadHandler = function(templateText)
		{
			divDetails.innerHTML = "";
			if(templateText)
			{
				divDetails.appendChild(getElementFromText(templateText));
				fireCallback(item);
				//callbackInterval = setInterval(function(){fireCallback(item)} ,1000);
			}
			else
			{
				console.error(item["templateUrl"] + " was not loaded.Please check the URL")
			}
		};
		var templateErrorHandler = function(errorText)
		{
			divDetails.innerHTML = "";
			console.error(item["templateUrl"] + " was not loaded.Please check the URL")
		};
		util.getTemplateFromURL(item["templateUrl"],templateLoadHandler,templateErrorHandler);
	}
}

function fireCallback(item)
{
	//evalScript(document.querySelector("#divDetails"),item);
	if(window[item["callback"]])
	{
		clearInterval(callbackInterval);
		window[item["callback"]]();
	}
}

function deselectAllMenu()
{
	var arrActive = document.querySelectorAll('.active');
	for(var count = 0;count < arrActive.length;count++)
	{
		arrActive[count].setAttribute("class","");
	}
}

function selectMenu(anchor,path)
{
	deselectAllMenu();
	if(!anchor)
	{
		var compMenu = document.querySelector("#compMenu");
		var arrAnchor = compMenu.querySelectorAll("a");
		for(var count = 0;count < arrAnchor.length;count++)
		{
			if(arrAnchor[count].getAttribute("href").substring(1) === path.substring(1))
			{
				anchor = arrAnchor[count];
			}
		}
	}
	anchor.setAttribute("class","active");
}

function getElementFromText(htmlText)
{
	if(htmlText)
	{
		var div = document.createElement("div");
		div.innerHTML = htmlText;
		var scripts = div.getElementsByTagName("script");
		for (var i = 0; i < scripts.length; ++i) 
		{
		   var script = scripts[i];
		   eval(script.innerHTML);
		}
		if(div["childNodes"] && div["childNodes"].length > 1)
		{
			return div;
		}
		return div.firstChild;
	}
	return null;
};

function evalScript(div,item)
{
	var scripts = div.getElementsByTagName("script");
	for (var i = 0; i < scripts.length; ++i) 
	{
	   var script = scripts[i];
	   eval(script.innerHTML);
	}
	if(window[item["callback"]])
	{
		clearInterval(callbackInterval);
		window[item["callback"]]();
	}
}

window.addEventListener('load', loadHandler);
</script>

<script id="script1">
</script>

</body>
</html>

