<html>
<head>
	<style>
		.stack
		{
			display: block;
		}
		.stack .row 
		{ 
			clear:both;
		}
		.stack .row .col    
		{
			background-color: #FFFFFF;
		    float:left;
		    width: 25%;
		}
		.stack .row .editor
		{
			min-height: 200px;
    		height: calc(43% - 0px);
    		border:1px solid;
    		resize: none;
		}
		.stack .output
		{ 
			clear:both;
			border:1px solid;
			width:99%;
			min-height: 200px;
    		height: calc(50% - 0px);
		}
		.center
		{
			text-align: center;
		}
		.right
		{
			text-align: right;
			padding-right: 10px;
		}
		.grid {
		  width: 100%;
		  overflow: hidden;
		
		  -webkit-box-sizing: border-box;
		  -moz-box-sizing: border-box;
		  box-sizing: border-box;
		}
		
		.output {
		  border-left: 1px solid #e3e3e3;
		  overflow: hidden;
		}
		
		.output iframe {
		  border: none;
		  width: 100%;
		  height: 100%;
		}
	</style>
	<style>
/* The Modal (background) */
.modal {
    display: none; /* Hidden by default */
    position: fixed; /* Stay in place */
    z-index: 1; /* Sit on top */
    padding-top: 100px; /* Location of the box */
    left: 0;
    top: 0;
    width: 100%; /* Full width */
    height: 100%; /* Full height */
    overflow: auto; /* Enable scroll if needed */
    background-color: rgb(0,0,0); /* Fallback color */
    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
}

/* Modal Content */
.modal-content {
    position: relative;
    background-color: #fefefe;
    margin: auto;
    padding: 0;
    border: 1px solid #888;
    width: 80%;
    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);
    -webkit-animation-name: animatetop;
    -webkit-animation-duration: 0.4s;
    animation-name: animatetop;
    animation-duration: 0.4s
}

/* Add Animation */
@-webkit-keyframes animatetop {
    from {top:-300px; opacity:0} 
    to {top:0; opacity:1}
}

@keyframes animatetop {
    from {top:-300px; opacity:0}
    to {top:0; opacity:1}
}

/* The Close Button */
.close {
    color: white;
    float: right;
    font-size: 28px;
    font-weight: bold;
}

.close:hover,
.close:focus {
    color: #000;
    text-decoration: none;
    cursor: pointer;
}

.modal-header {
    padding: 2px 16px;
    background-color: #5cb85c;
    color: white;
}

.modal-body {padding: 2px 16px;}

.modal-footer {
    padding: 2px 16px;
    background-color: #5cb85c;
    color: white;
}
</style>
	<script src="js/nsUtil.js"></script>
	<script src="js/nsBinding.js"></script>
</head>
<body onload="initialize()">
<div class="stack">
	 <div class="row">
        <div class="col center">
            Html
        </div>
        <div class="col center">
            CSS
        </div>
         <div class="col center">
            Javascript
        </div>
        <div class="col center">
           Binding Data
        </div>
    </div>
    <div class="row">
        <textarea id="divHtml" class="col editor">
			<h1>My First CSS Example</h1>
			<p>This is a paragraph.</p>
			<button onclick="myFunction()">Try it</button>
			<span>{{name}}</span>
		 	<input type="text" value="{{age}}">
			<span data-nsbind-style="color:{{tempColor}}">{{name1}}</span>
			<ul>
		          <li nsbind-repeater="{{country in countries}}">
		            <strong>  Country Name : </strong> {{country..name}} -
		            <strong>  Country Code : </strong> {{country..code}}
					<strong>  color : </strong> {{tempColor}}
		            <input type="text" value="{{country..name}}">
		            <input type="text" value="{{country..code}}">
		          </li>
		    </ul>
        </textarea>
        <textarea id="divCSS" class="col editor">
        	html,body {
    background-color: lightblue;
    height:100%;
}

h1 {
    color: white;
    text-align: center;
}

p {
    font-family: verdana;
    font-size: 20px;
}
        </textarea>
        <textarea id="divJavascript" class="col editor">
        	function myFunction() {
			    alert("Hello! I am an alert box!");
			}
        </textarea>
        <textarea id="txtData" class="col editor">
        	 { "name":"John", "age":31, "city":"New York","tempColor":"red","name1":"Anurag" }
    	</textarea>
    </div>
    <div class="row right">
    	<button id="btnRun" onclick="parseHTML()">Run</button>
    </div>
    <div class="output grid">
		<iframe id="ifOutput"></iframe>
	</div>
    
</div>

<div id="myModal" class="modal">

  <!-- Modal content -->
  <div class="modal-content">
    <div class="modal-header">
      <span class="close">&times;</span>
      <h4>Add Binding To Elements</h4>
    </div>
    <div class="modal-body">
      <table id="tblElement">
      
      </table>
    </div>
<!--     <div class="modal-footer"> -->
<!--       <h3>Modal Footer</h3> -->
<!--     </div> -->
  </div>

</div>



</body>

<script>
var util = new NSUtil();

function initialize()
{
	intializePopUp();
}

function closePopUp()
{
	var modal = document.getElementById('myModal');
	modal.style.display = "none";
}

function showPopUp()
{
	var modal = document.getElementById('myModal');
	modal.style.display = "block";
}

function windowClickHandler(event)
{
	var modal = document.getElementById('myModal');
	if (event.target == modal) 
	{
		closePopUp();
	}
}

function intializePopUp()
{
	var span = document.getElementsByClassName("close")[0];
	span.onclick = closePopUp;
	window.onclick = windowClickHandler;
}

function parseHTML()
{
	//var arrElements = document.querySelectorAll("[ns-bindIt]");
	//if(arrElements && arrElements.length > 0)
	//{
		showPopUp();
	//}
}

function generateOuput()
{
	var divHtml = document.getElementById("divHtml");
	var divCSS = document.getElementById("divCSS");
	var divJavascript = document.getElementById("divJavascript");
	var txtData = document.getElementById("txtData");
	var ifOutput = document.getElementById("ifOutput");
	var doc = ifOutput.contentDocument || ifOutput.contentWindow.document;
	if(divCSS.value)
	{
		writeCSS(divCSS.value,doc);
	}
	if(divHtml.value)
	{
		doc.body.innerHTML = divHtml.value;
	}
	if(divJavascript.value)
	{
		writeJS(divJavascript.value,doc);
	}
	if(txtData.value)
	{
		var data = "";
		try
		{
			data = JSON.parse(txtData.value.trim());
			data["countries"] = [{
		          name: 'Afghanistan',
		          code: 'AF'
		        }, {
		          name: 'Aland Islands',
		          code: 'AX'
		        }, {
		          name: 'Albania',
		          code: 'AL'
		        }, {
		          name: 'Algeria',
		          code: 'DZ'
		        }, {
		          name: 'American Samoa',
		          code: 'AS'
		        }, {
		          name: 'AndorrA',
		          code: 'AD'
		        }, {
		          name: 'Angola',
		          code: 'AO'
		        }, {
		          name: 'Anguilla',
		          code: 'AI'
		        }, {
		          name: 'Antarctica',
		          code: 'AQ'
		        }, {
		          name: 'Antigua and Barbuda',
		          code: 'AG'
		        }, {
		          name: 'Argentina',
		          code: 'AR'
		     	}];
		}
		catch(error)
		{
			data = JSON.parse(JSON.stringify(txtData.value.trim()));
		}
		console.log(data);
		if(data && !util.isString(data))
		{
			var nsBind = new NSBinding(doc.body,data);
		}
	}
}

function writeCSS(content,doc) 
{
	if(!doc)
	{
		doc = document;
	}
	var css = doc.getElementById("nsStyle");
	if(!css)
	{
		css = document.createElement("style");
		css.setAttribute("id","nsStyle");
		css.setAttribute("type","text/css");
		doc.getElementsByTagName("head")[0].appendChild(css);
	}
	css.innerHTML = content;
	//IE
	/*if(css.styleSheet)
	{
	  	css.styleSheet.cssText = rule;
	}
	else
	{
	  	css.appendChild(document.createTextNode(rule));
	}*/
	
}

function writeJS(content,doc) 
{
	if(!doc)
	{
		doc = document;
	}
	var script = doc.getElementById("nsScript");
	if(!script)
	{
		script = document.createElement("script");
		script.setAttribute("id","nsScript");
		script.setAttribute("type","text/javascript");
		doc.body.appendChild(script);
	}
	script.innerHTML = content;
}




</script>
</html>
