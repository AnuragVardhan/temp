private void loadBaseCSSFile() throws Exception
	{
		Map<String,String> mapCSSFiles = new HashMap<String,String>();
		mapCSSFiles.put("component", baseCSSURL + "component.css");
		mapCSSFiles.put("nsPinTip", baseCSSURL + "nsPinTip.css");
		
		for(String key:mapCSSFiles.keySet())
		{
			String inputFile = mapCSSFiles.get(key);
			String[] arrOutput = inputFile.split("\\\\");
			String outputFileName = arrOutput[arrOutput.length - 1].replace(".css",".min.css");
			loadFile(new String[]{inputFile},null,outputURL + outputFileName);
		}
	}
	
	private void loadCSSFile(String component) throws Exception
	{
		Map<String,String> mapCSSFiles = new HashMap<String,String>();
		mapCSSFiles.put("nsMenu", baseCSSURL + "nsMenu.css");
		mapCSSFiles.put("nsPagination", baseCSSURL + "nsPagination.css");
		mapCSSFiles.put("nsModal", baseCSSURL + "nsModal.css");
		mapCSSFiles.put("nsProgressBar", baseCSSURL + "nsProgressBar.css");
		mapCSSFiles.put("nsProgressBar", baseCSSURL + "nsProgressBar.css");
		mapCSSFiles.put("nsGrid", baseCSSURL + "nsGrid.css");
		mapCSSFiles.put("nsList", baseCSSURL + "nsList.css");
		mapCSSFiles.put("nsTextBox", baseCSSURL + "nsTextBox.css");
		
		Map<String,String[]> mapDependency = new HashMap<String,String[]>();
		mapDependency.put("nsProgressBar",new String[]{"nsModal","nsProgressBar"});
		mapDependency.put("nsGrid",new String[]{"nsGrid","nsMenu","nsPagination","nsList"});
		mapDependency.put("nsList",new String[]{"nsList","nsMenu"});
		mapDependency.put("nsTextBox",new String[]{"nsList","nsTextBox"});
		mapDependency.put("nsMenu",new String[]{"nsMenu"});
		mapDependency.put("nsPanel",new String[]{"nsPanel"});
		
		List<String> lstInput = new ArrayList<String>();
		if(mapDependency.containsKey(component))
		{
			String[] arrFile = mapDependency.get(component);
			if(arrFile != null && arrFile.length > 0)
			{
				for(String file:arrFile)
				{
					lstInput.add(mapCSSFiles.get(file));
				}
			}
		}
		loadFile(lstInput.toArray(new String[0]),null,outputURL + component + ".min.css");
	}
