NSUtil.prototype.hasAttribute = function (element,attributeName)
{
	if(element && attributeName && element["hasAttribute"])
	{
		return (element.hasAttribute(attributeName) || element.hasAttribute("data-" + attributeName)); 
	}
	return false;
};

NSUtil.prototype.getAttribute = function (element,attributeName)
{
	if(element && attributeName && element["hasAttribute"])
	{
		return (element.hasAttribute(attributeName) ? element.getAttribute(attributeName) : element.getAttribute("data-" + attributeName)); 
	}
	return null;
};

NSUtil.prototype.removeAttribute = function (element,attributeName)
{
	if(element && attributeName && element["hasAttribute"])
	{
		return (element.hasAttribute(attributeName) ? element.removeAttribute(attributeName) : element.removeAttribute("data-" + attributeName)); 
	}
	return null;
};
 || (navigator.userAgent && navigator.userAgent.match(/Trident/))))
 if(url)
	 {
		var xmlhttp;
		if (window.XMLHttpRequest)
		{// code for IE7+, Firefox, Chrome, Opera, Safari
			xmlhttp = new XMLHttpRequest();
		}
		else
		{// code for IE6, IE5
			xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
		}
		xmlhttp.onreadystatechange=function()
		{
		  if(xmlhttp.readyState === 4)
		  {
			  if (xmlhttp.status === 200) 
			  {  
				  if(callback)
				  {
					  callback(xmlhttp.responseText);
				  }
		      } 
			  else 
			  {
				  console.debug("Error loading Template from URL:: " + url);
				  if(errorCallback)
				  {
					 errorCallback(xmlhttp.statusText);
				  }
		      }  
		  }
		}
		xmlhttp.open("GET",url,true);
		xmlhttp.send();
		this.__getResponseData = function()
	{
		var contentType = this.__request.getResponseHeader("content-type");
		var data = null;
		var isXMLData = false;
		var dataType = this.__requestDone.dataType;
		if(!dataType && contentType && contentType.indexOf("xml") > -1)
		{
			isXMLData = true;
		}
		if(isXMLData || (dataType && dataType.indexOf("xml") > -1))
		{
			data = this.__request.responseXML;
		}
		else
		{
			data = this.__request.responseText;
		}
		// If the specified type is "script", execute the returned text response as if it was JavaScript
		if (dataType == "script") 
		{
			eval.call(window, data);
		}
		return data;
	};
