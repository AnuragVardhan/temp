 NSUtil.prototype.getDimensionAsNumber = function(element,dimension)
 {
 	var retValue = 0;
 	if(element && dimension)
 	{
 		var dimensionUnit = this.getDimensionUnit(dimension);
 		if(dimensionUnit === 1 && element && element.parent)
 		{
 			dimension = dimension.substring(0,dimension.length - 1);
 			retValue = (dimension / 100) * element.parent.offsetHeight;
 		}
 		else if(dimensionUnit === 2)
 		{
 			retValue = dimension.substring(0,dimension.length - 2);
 		}
 		else
 		{
 			retValue = dimension;
 		}
 	}
 	if(isNaN(retValue))
 	{
 		retValue = 0;
 	}
 	return parseInt(retValue);
 };
 
 /*returns 0 if dimension has no unit
  returns 1 if dimension is in %
  returns 2 if dimension is in px 
  returns -1 if dimension is not valid */ 
 NSUtil.prototype.getDimensionUnit = function(dimensionValue)
 {
 	var retValue = -1;
 	if(!this.isUndefined(dimensionValue) && dimensionValue != null )
 	{
 		retValue = 0;
 		if(dimensionValue.substring(dimensionValue.length - 1) == "%")
 		{
 			retValue = 1;
 		}
 		else if(dimensionValue.substring(dimensionValue.length - 2) == "px")
 		{
 			retValue = 2;
 		}
 	}
 	return retValue;
 };
 
 .dataGridCell
{
    border-bottom : buttonshadow 1px solid;
    border-top : buttonshadow 1px solid;
    border-left : buttonshadow 1px solid;
    border-right : buttonshadow 1px solid;
    cursor : default;
    padding:0px;
    text-align:left;
    font-weight:normal;
    vertical-align:middle;
    color:#000000;
    word-wrap: break-word;
}
 
