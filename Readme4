349: ;
680:
nsGrid.highlightText = function(dataField,text)
{
	var colItem = this.__getColumnObjectByDataField(dataField);
	if(colItem)
	{
		var index = colItem[this.__fieldColIndex];
		var arrRows = this.__tblBodyBody.rows;
		var length = arrRows.length;
		for(var rowIndex = 0; rowIndex < length; rowIndex++)
	    {
			var cell = arrRows[rowIndex].cells[index];
			this.util.highlightText(cell,text,"nsTextHighlight");
	    }
	}
};

nsGrid.__handleFiltering = function(filter,setting,recordLimit)
{ 
	if(filter)
    {
		 var isHierarchical = false;
		 var source = this.__dataSource;
		 if(this.__enableHierarchical)
		 {
			 isHierarchical = true;
		 }
		 else if(this.__enableGrouping)
		 {
			 isHierarchical = true;
			 source = this.__groupSource;
		 }
	   	 var nsFilter = new NSFilter(source,filter,setting,recordLimit,isHierarchical,this.__childField);
	   	 this.__arrWrapper = nsFilter.execute();
	   	 this.__updateTotalRecords();
	   	 this.__renderBody(false);
   		 if(filter instanceof Array) 
   	     {
	   		 for (var count = 0; count < filter.length; count++) 
	         {
	 	   		var item = filter[count];
	 	   		var key = Object.keys(item)[0];
	 	   		this.highlightText(key,item[key]);
	         }
   	     }
   		 else if(typeof(filter) === "object") 
   	     {
   	        for(var key in filter) 
   	        {
   	        	this.highlightText(key,filter[key]);
   	        }
   	     }
    }
};


nsGrid.__getColumnObjectByDataField = function(dataField)
{
	if(this.__columns && dataField)
	{
		for(var count = 0;count < this.__columns.length;count++)
		{
			var item = this.__columns[count];
			if(item["dataField"] === dataField)
			{
				return item;
			}
		}
	}
	return null;
};
