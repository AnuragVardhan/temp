if(this.__model)
		{
			for(var key in this.__model)
			{
				if(typeof this.__model[key] === "function")
				{
					this.__injectFunction(this.__model,key,this.__model);
				}
			}
		}
		
		NSController.prototype.__injectFunction = function(model,key,context)
{
	if(model[key])
	{
		var self = this;
		model[key] = (function() 
		{
		    var cachedFunction = model[key];
		    return function() 
		    {
		    	
		    	self.__preFunctionCall.bind(self)(arguments);//.apply(self,funcName,funcArguments);
		    	var retValue = cachedFunction.apply(context,arguments);
		        self.__postFunctionCall.bind(self)(arguments);
		        return retValue;
		    };
		}());
	}
};

NSController.prototype.__preFunctionCall = function(funcArguments)
{
	console.log(" starting");
};

NSController.prototype.__postFunctionCall = function(funcArguments)
{
	console.log(" ending");
};
