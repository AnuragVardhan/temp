"use strict"; 
function NSFlatGrid(nsGrid,nsUtil) 
{
	this.__nsGrid = nsGrid;
	this.util = nsUtil;
}
/********************************Common Functions for Grid ****************************************/
NSFlatGrid.prototype.__initialize = function ()
{
	
};

NSFlatGrid.prototype.propertyChange = function(attrName, oldVal, newVal, setProperty) 
{
	var attributeName = attrName.toLowerCase();
	if(attributeName === "pageSize" && parseInt(this.__nsGrid.getAttribute("pageSize")) > 0)
	{
		this.__nsGrid.__pageSize = parseInt(this.__nsGrid.getAttribute("pageSize"));
		this.__nsGrid.dataSource(this.__nsGrid.__dataSource);
	}
};

NSFlatGrid.prototype.dataSource = function(source)
{
	this.__nsGrid.__arrWrapper = this.__nsGrid.__dataSource.slice(0);
	if(this.__nsGrid.__enablePagination)
	{
		if(!this.__nsGrid.__isPaginationTypeScroll)
		{
			this.__nsGrid.__createPaginationControl(this.__nsGrid.__divOuterContainer);
		}
		if(this.__nsGrid.__isPaginationModeAuto)
		{
			this.__nsGrid.__updateTotalRecords(this.__nsGrid.__arrWrapper.length);
			if(this.__nsGrid.__isPaginationTypeScroll)
			{
				this.__nsGrid.__arrInternalSource = this.__nsGrid.__arrWrapper.slice(0);//this.__nsGrid.__arrWrapper.slice(0,this.__nsGrid.__INFINITE_SCROLL_INITIAL_LOAD);
				this.__nsGrid.__fetchRecordCallBack = this.__addRowsforScrollPagination.bind(this);
			}
			else 
			{
				this.__nsGrid.__arrInternalSource = this.__nsGrid.__arrWrapper.slice(0,this.__nsGrid.__pageSize);
				this.__nsGrid.__fetchRecordCallBack = this.__addRowsforPagePagination.bind(this);
			}
		}
		else
		{
			this.__nsGrid.__arrInternalSource = this.__nsGrid.__arrWrapper.slice(0);
			this.__nsGrid.__updateTotalRecords();
		}
	}
	else
	{
		this.__nsGrid.__arrInternalSource = this.__nsGrid.__arrWrapper.slice(0);
		this.__nsGrid.__updateTotalRecords();
	}
};

NSFlatGrid.prototype.__createBody = function()
{
};

NSFlatGrid.prototype.__createBodyBody= function(dataSet,startIndex,endIndex)
{
    if(dataSet && dataSet.length > 0)
    {
    	 for (var rowIndex = startIndex; rowIndex < endIndex; rowIndex++)
	     {
    		var item = dataSet[rowIndex];
    		this.__createRow(item);
	     }
    }
};

NSFlatGrid.prototype.__setSourceForAsync= function()
{
	this.__nsGrid.__arrInternalSource = this.__nsGrid.__arrWrapper.slice(0);
};

NSFlatGrid.prototype.__createRowAsync= function(item,index,array)
{
	this.__createRow(item);
};

NSFlatGrid.prototype.__createBodyBodyVirtual= function(dataSet,totalRows)
{
	if(dataSet && dataSet.length > 0)
    {
    	if(totalRows > dataSet.length)
    	{
    		totalRows = dataSet.length;
    	}
    	this.__createBodyBody(dataSet,0,totalRows);
    }
};

NSFlatGrid.prototype.__checkForAdditionalColumns = function()
{
};

NSFlatGrid.prototype.__addSVGInPage = function(objSVG)
{
};

NSFlatGrid.prototype.__setMeasurement = function()
{
	
};
NSFlatGrid.prototype.__resetDataInBody= function(fromIndex,toIndex)
{
	var arrSource = this.__nsGrid.__arrWrapper.slice(fromIndex,toIndex + 1);
	var indexCount = fromIndex;
	var totalRecords = this.__nsGrid.__totalRecords;
	var arrRows = this.__nsGrid.__tblCenterBodyBody.rows;
	for(var rowIndex = 0; rowIndex < arrRows.length; rowIndex++,indexCount++)
    {
		var row = arrRows[rowIndex];
		if(indexCount < totalRecords)
		{
			row.style.display = "";
			var item = arrSource[rowIndex];
			if(item)
			{
				row.setAttribute("ns-index",indexCount);
				item[this.__nsGrid.__fieldIndex] = indexCount;
				item[this.__nsGrid.__fieldRowHtml] = row;
				this.__updateRow(row,item);
			}
			else
			{
				row.style.display = "none";
			}
		}
		else
		{
			row.style.display = "none";
		}
    }
};

NSFlatGrid.prototype.__setWrapperSource = function(source,offset)
{
	
};

NSFlatGrid.prototype.__getFlatSource= function()
{
	return this.__nsGrid.__arrWrapper;
};
/********************************Common Functions for Grid ****************************************/
NSFlatGrid.prototype.__createRow = function(item)
{
	if(item)
	{
		var row = document.createElement("TR");
		var index = this.__nsGrid.__getTotalRows();
		row.setAttribute("ns-index",index);
		item[this.__nsGrid.__fieldIndex] = index;
		item[this.__nsGrid.__fieldRowHtml] = row;
		this.__nsGrid.__setBodyRowProperty(row,item,index);
		var colLength = this.__nsGrid.__columns.length;
		for (var colIndex = 0; colIndex < colLength; colIndex++)
	    {
	    	var colItem = this.__nsGrid.__columns[colIndex];
	    	var cell =  row.insertCell(-1);
	    	this.util.addStyleClass(cell , "nsDataGridCell");
	        var cellDiv = this.util.createDiv(null);
	        this.util.addStyleClass(cellDiv,this.__nsGrid.__CLASS_CELL_CHILD);
	        this.__nsGrid.__addCellText(row,item,cellDiv,colItem,colIndex);
	        this.__nsGrid.__highlightDiv(cellDiv,colIndex);
	        cell.appendChild(cellDiv);
	    }
		this.__nsGrid.__tblCenterBodyBody.appendChild(row);
		this.__createFixedRow(row);
	}
};

NSFlatGrid.prototype.__createFixedRow = function(row)
{
	var centerBodyCells = row.cells;
	var cloneTable = function(tblBodyBody,startIndex,endIndex)
	{
		var fixedRow = document.createElement("TR");
		fixedRow.style.height = "auto";
	    for (var colIndex = startIndex; colIndex < endIndex; colIndex++)
	    {
	    	var fixedCell = centerBodyCells[colIndex].cloneNode(true);
	    	fixedRow.appendChild(fixedCell);
	    }
	    tblBodyBody.appendChild(fixedRow);
	    fixedRow.style.height = row.offsetHeight + "px";
	};
	if(this.__nsGrid.__tblLeftBodyBody && this.__nsGrid.__leftFixedColumn > 0 && this.__nsGrid.__columns && this.__nsGrid.__columns.length > this.__nsGrid.__leftFixedColumn)
	{
		cloneTable(this.__nsGrid.__tblLeftBodyBody,0,this.__nsGrid.__leftFixedColumn);
	}
	if(this.__nsGrid.__tblRightBodyBody && this.__nsGrid.__rightFixedColumn > 0 && this.__nsGrid.__columns && this.__nsGrid.__columns.length > this.__nsGrid.__rightFixedColumn)
	{
		cloneTable(this.__nsGrid.__tblRightBodyBody,this.__nsGrid.__columns.length - 1 - this.__nsGrid.__rightFixedColumn,this.__nsGrid.__columns.length);
	}
	
};

NSFlatGrid.prototype.__updateRow = function(row,item)
{
	if(row && item)
	{
		//var row = item[this.__nsGrid.__fieldRow];
		var index = item[this.__nsGrid.__fieldIndex];
		var cells = row.cells;
		for (var colIndex = 0; colIndex < this.__nsGrid.__columns.length; colIndex++)
        {
			var cell = cells[colIndex];
        	var colItem = this.__nsGrid.__columns[colIndex];
        	this.__nsGrid.__updateCellText(row,cell,item,colItem,index,colIndex);
        }
	}
};

NSFlatGrid.prototype.__addRowsforScrollPagination = function(fromRecord,toRecord,pageSize)
{
	//console.log("In __addRowsforScrollPagination " + fromRecord + "," + toRecord + "," + pageSize);
	var arrArray = this.__nsGrid.__arrWrapper.slice(fromRecord,toRecord + 1); 
	this.__nsGrid.__addRemoveRowCallInternal = true;
	this.__nsGrid.addRows(arrArray);
};

NSFlatGrid.prototype.__addRowsforPagePagination = function(fromRecord,toRecord,pageSize)
{
	//slice returns index range from fromRecord to toRecord - 1 hence adding 1 
	//this.__nsGrid.__arrInternalSource = this.__nsGrid.__arrWrapper.slice(fromRecord,toRecord + 1);
	this.__nsGrid.__resetDataInBody(fromRecord,toRecord,true);
};
