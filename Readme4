NSUtil.prototype.nsToolTipInElement = function()
{
	this.util = new NSUtil();
	
	this.addToolTip = function(element,toolTipHTMLOrig)
	{
		if(element && toolTipHTMLOrig && toolTipHTMLOrig.length > 0)
		{
			var toolTipHTML = toolTipHTMLOrig.slice(0);
			var id = element.getAttribute("id");
			this.util.addStyleClass(element,"nsElemenTooltip");
			var container = this.util.createElement("span",id + "ElemenTooltipContainer", "nsElemenTooltipContainer");
			var arrow = this.util.createElement("span",id + "ElemenTooltipArrow", "nsElemenTooltipTipArrow");
			container.appendChild(arrow);
			var content = this.util.createElement("span",id + "ElemenTooltipContent", "nsElemenTooltipContent");
			content.innerHTML = toolTipHTML;
			container.appendChild(content);
			element.appendChild(container);
			this.util.addEvent(element,"mouseover",this.__mouseOverHandler.bind(this));
			//var expectedWidth = this.util.getWidthOfText(toolTipHTML,"12px");
			//container.style.marginLeft = (-1 * (expectedWidth / 2)) + "px";
		}
	};
	
	this.__mouseOverHandler = function(event)
	{
		var target = this.util.getTarget(event);
		if(!this.util.hasStyleClass(target, "nsElemenTooltip"))
		{
			target = this.util.findParentBySelector(target,".nsElemenTooltip");
		}
		if(target)
		{
			var toolTip = target.querySelector(".nsElemenTooltipContainer");
			var offset = this.util.getEventPosition(event);
			toolTip.left = offset.left;
			//toolTip.top = offset.left;
		}
		
	};
};

NSUtil.prototype.getWidth = function(text)
{
	var element = document.createElement("span");
	element.innerHTML = text;
    //var e = element.cloneNode(true);
	element.style.visibility = "hidden";
    document.body.appendChild(element);
    var height = element.offsetWidth + 0;
    document.body.removeChild(element);
    return height;
};

NSUtil.prototype.getWidthOfText = function(text,fontSize,fontName)
{	
	var canvas = document.createElement("canvas");
	var context = canvas.getContext("2d");
	var fontArgs = context.font.split(" ");
	if(fontSize)
	{
		fontArgs[0] = fontSize;
	}
	if(fontName)
	{
		fontArgs[1] = fontName;
	}
	context.font = fontArgs[0] + " " + fontArgs[1];        
	var width = context.measureText(text).width;
	return width;
};
